// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux(in=load, sel=address[14], a=ramLoad, b=dmux1out);
    DMux(in=dmux1out, sel=address[13], a=screenLoad, b=nullPin);
    RAM16K(in=in, load=ramLoad, address=address[0..13], out=ramOut);
    Screen(in=in, load=screenLoad, address=address[0..12], out=screenOut);
    Keyboard(out=kbdOut);
    Mux16(a=screenOut, b=kbdOut, sel=address[13], out=mux1out);
    Mux16(a=ramOut, b=mux1out, sel=address[14], out=out);
}
   /* Memory consists of a RAM16K, Screen, and Keyboard chip. 
    * The Ram16K has data compacted while the Screen and Keyboard Chip has a memory map.
    * Combined together, it has an ouput of 16 bit values and, of course, 16 bit input values
    * with 15 address selectors and loading data/input. Determining input will include DMuxes.
    * If address[14] == 1 then we are using RAM; else, we are using Screen or Keyboard
    * If address[13] == 1 then we are using Screen; else, we are using Keyboard and none of the load input.
    * RAM16K uses ramLOAD and the first 14 bits of the address. Screen uses the first 13 bits.
    * And keyboard is a simple keyboard. Vice versa with determing the ouput, if address[13] == 1 
    * then we are using Screen; else, we are using Keyboard. If address[14] == 1 then we are using RAM;
    * else, we are using Screen or Keyboard.
    */